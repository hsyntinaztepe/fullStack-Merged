// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: datalink.proto

#include "datalink.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace datalink {
PROTOBUF_CONSTEXPR DataLinkMessage::DataLinkMessage(
    ::_pbi::ConstantInitialized)
  : id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , from_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , to_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , text_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct DataLinkMessageDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DataLinkMessageDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DataLinkMessageDefaultTypeInternal() {}
  union {
    DataLinkMessage _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DataLinkMessageDefaultTypeInternal _DataLinkMessage_default_instance_;
PROTOBUF_CONSTEXPR DataLinkRequest::DataLinkRequest(
    ::_pbi::ConstantInitialized)
  : filter_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct DataLinkRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DataLinkRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DataLinkRequestDefaultTypeInternal() {}
  union {
    DataLinkRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DataLinkRequestDefaultTypeInternal _DataLinkRequest_default_instance_;
PROTOBUF_CONSTEXPR DataLinkResponse::DataLinkResponse(
    ::_pbi::ConstantInitialized)
  : messages_()
  , total_count_(0){}
struct DataLinkResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DataLinkResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DataLinkResponseDefaultTypeInternal() {}
  union {
    DataLinkResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DataLinkResponseDefaultTypeInternal _DataLinkResponse_default_instance_;
}  // namespace datalink
static ::_pb::Metadata file_level_metadata_datalink_2eproto[3];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_datalink_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_datalink_2eproto = nullptr;

const uint32_t TableStruct_datalink_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::datalink::DataLinkMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::datalink::DataLinkMessage, id_),
  PROTOBUF_FIELD_OFFSET(::datalink::DataLinkMessage, from_),
  PROTOBUF_FIELD_OFFSET(::datalink::DataLinkMessage, to_),
  PROTOBUF_FIELD_OFFSET(::datalink::DataLinkMessage, text_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::datalink::DataLinkRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::datalink::DataLinkRequest, filter_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::datalink::DataLinkResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::datalink::DataLinkResponse, messages_),
  PROTOBUF_FIELD_OFFSET(::datalink::DataLinkResponse, total_count_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::datalink::DataLinkMessage)},
  { 10, -1, -1, sizeof(::datalink::DataLinkRequest)},
  { 17, -1, -1, sizeof(::datalink::DataLinkResponse)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::datalink::_DataLinkMessage_default_instance_._instance,
  &::datalink::_DataLinkRequest_default_instance_._instance,
  &::datalink::_DataLinkResponse_default_instance_._instance,
};

const char descriptor_table_protodef_datalink_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\016datalink.proto\022\010datalink\"E\n\017DataLinkMe"
  "ssage\022\n\n\002id\030\001 \001(\t\022\014\n\004from\030\002 \001(\t\022\n\n\002to\030\003 "
  "\001(\t\022\014\n\004text\030\004 \001(\t\"!\n\017DataLinkRequest\022\016\n\006"
  "filter\030\001 \001(\t\"T\n\020DataLinkResponse\022+\n\010mess"
  "ages\030\001 \003(\0132\031.datalink.DataLinkMessage\022\023\n"
  "\013total_count\030\002 \001(\0052_\n\017DataLinkService\022L\n"
  "\023GetDataLinkMessages\022\031.datalink.DataLink"
  "Request\032\032.datalink.DataLinkResponseb\006pro"
  "to3"
  ;
static ::_pbi::once_flag descriptor_table_datalink_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_datalink_2eproto = {
    false, false, 323, descriptor_table_protodef_datalink_2eproto,
    "datalink.proto",
    &descriptor_table_datalink_2eproto_once, nullptr, 0, 3,
    schemas, file_default_instances, TableStruct_datalink_2eproto::offsets,
    file_level_metadata_datalink_2eproto, file_level_enum_descriptors_datalink_2eproto,
    file_level_service_descriptors_datalink_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_datalink_2eproto_getter() {
  return &descriptor_table_datalink_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_datalink_2eproto(&descriptor_table_datalink_2eproto);
namespace datalink {

// ===================================================================

class DataLinkMessage::_Internal {
 public:
};

DataLinkMessage::DataLinkMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:datalink.DataLinkMessage)
}
DataLinkMessage::DataLinkMessage(const DataLinkMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_id().empty()) {
    id_.Set(from._internal_id(), 
      GetArenaForAllocation());
  }
  from_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    from_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_from().empty()) {
    from_.Set(from._internal_from(), 
      GetArenaForAllocation());
  }
  to_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    to_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_to().empty()) {
    to_.Set(from._internal_to(), 
      GetArenaForAllocation());
  }
  text_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    text_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_text().empty()) {
    text_.Set(from._internal_text(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:datalink.DataLinkMessage)
}

inline void DataLinkMessage::SharedCtor() {
id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
from_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  from_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
to_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  to_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
text_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  text_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

DataLinkMessage::~DataLinkMessage() {
  // @@protoc_insertion_point(destructor:datalink.DataLinkMessage)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void DataLinkMessage::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  id_.Destroy();
  from_.Destroy();
  to_.Destroy();
  text_.Destroy();
}

void DataLinkMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void DataLinkMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:datalink.DataLinkMessage)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty();
  from_.ClearToEmpty();
  to_.ClearToEmpty();
  text_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DataLinkMessage::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "datalink.DataLinkMessage.id"));
        } else
          goto handle_unusual;
        continue;
      // string from = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_from();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "datalink.DataLinkMessage.from"));
        } else
          goto handle_unusual;
        continue;
      // string to = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_to();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "datalink.DataLinkMessage.to"));
        } else
          goto handle_unusual;
        continue;
      // string text = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_text();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "datalink.DataLinkMessage.text"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DataLinkMessage::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:datalink.DataLinkMessage)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (!this->_internal_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "datalink.DataLinkMessage.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  // string from = 2;
  if (!this->_internal_from().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_from().data(), static_cast<int>(this->_internal_from().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "datalink.DataLinkMessage.from");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_from(), target);
  }

  // string to = 3;
  if (!this->_internal_to().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_to().data(), static_cast<int>(this->_internal_to().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "datalink.DataLinkMessage.to");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_to(), target);
  }

  // string text = 4;
  if (!this->_internal_text().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_text().data(), static_cast<int>(this->_internal_text().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "datalink.DataLinkMessage.text");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_text(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:datalink.DataLinkMessage)
  return target;
}

size_t DataLinkMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:datalink.DataLinkMessage)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1;
  if (!this->_internal_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  // string from = 2;
  if (!this->_internal_from().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_from());
  }

  // string to = 3;
  if (!this->_internal_to().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_to());
  }

  // string text = 4;
  if (!this->_internal_text().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_text());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DataLinkMessage::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    DataLinkMessage::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DataLinkMessage::GetClassData() const { return &_class_data_; }

void DataLinkMessage::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<DataLinkMessage *>(to)->MergeFrom(
      static_cast<const DataLinkMessage &>(from));
}


void DataLinkMessage::MergeFrom(const DataLinkMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:datalink.DataLinkMessage)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _internal_set_id(from._internal_id());
  }
  if (!from._internal_from().empty()) {
    _internal_set_from(from._internal_from());
  }
  if (!from._internal_to().empty()) {
    _internal_set_to(from._internal_to());
  }
  if (!from._internal_text().empty()) {
    _internal_set_text(from._internal_text());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DataLinkMessage::CopyFrom(const DataLinkMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:datalink.DataLinkMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DataLinkMessage::IsInitialized() const {
  return true;
}

void DataLinkMessage::InternalSwap(DataLinkMessage* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &id_, lhs_arena,
      &other->id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &from_, lhs_arena,
      &other->from_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &to_, lhs_arena,
      &other->to_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &text_, lhs_arena,
      &other->text_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata DataLinkMessage::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_datalink_2eproto_getter, &descriptor_table_datalink_2eproto_once,
      file_level_metadata_datalink_2eproto[0]);
}

// ===================================================================

class DataLinkRequest::_Internal {
 public:
};

DataLinkRequest::DataLinkRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:datalink.DataLinkRequest)
}
DataLinkRequest::DataLinkRequest(const DataLinkRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  filter_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    filter_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_filter().empty()) {
    filter_.Set(from._internal_filter(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:datalink.DataLinkRequest)
}

inline void DataLinkRequest::SharedCtor() {
filter_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  filter_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

DataLinkRequest::~DataLinkRequest() {
  // @@protoc_insertion_point(destructor:datalink.DataLinkRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void DataLinkRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  filter_.Destroy();
}

void DataLinkRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void DataLinkRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:datalink.DataLinkRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  filter_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DataLinkRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string filter = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_filter();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "datalink.DataLinkRequest.filter"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DataLinkRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:datalink.DataLinkRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string filter = 1;
  if (!this->_internal_filter().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_filter().data(), static_cast<int>(this->_internal_filter().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "datalink.DataLinkRequest.filter");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_filter(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:datalink.DataLinkRequest)
  return target;
}

size_t DataLinkRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:datalink.DataLinkRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string filter = 1;
  if (!this->_internal_filter().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_filter());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DataLinkRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    DataLinkRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DataLinkRequest::GetClassData() const { return &_class_data_; }

void DataLinkRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<DataLinkRequest *>(to)->MergeFrom(
      static_cast<const DataLinkRequest &>(from));
}


void DataLinkRequest::MergeFrom(const DataLinkRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:datalink.DataLinkRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_filter().empty()) {
    _internal_set_filter(from._internal_filter());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DataLinkRequest::CopyFrom(const DataLinkRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:datalink.DataLinkRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DataLinkRequest::IsInitialized() const {
  return true;
}

void DataLinkRequest::InternalSwap(DataLinkRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &filter_, lhs_arena,
      &other->filter_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata DataLinkRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_datalink_2eproto_getter, &descriptor_table_datalink_2eproto_once,
      file_level_metadata_datalink_2eproto[1]);
}

// ===================================================================

class DataLinkResponse::_Internal {
 public:
};

DataLinkResponse::DataLinkResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  messages_(arena) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:datalink.DataLinkResponse)
}
DataLinkResponse::DataLinkResponse(const DataLinkResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      messages_(from.messages_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  total_count_ = from.total_count_;
  // @@protoc_insertion_point(copy_constructor:datalink.DataLinkResponse)
}

inline void DataLinkResponse::SharedCtor() {
total_count_ = 0;
}

DataLinkResponse::~DataLinkResponse() {
  // @@protoc_insertion_point(destructor:datalink.DataLinkResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void DataLinkResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void DataLinkResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void DataLinkResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:datalink.DataLinkResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  messages_.Clear();
  total_count_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DataLinkResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .datalink.DataLinkMessage messages = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_messages(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      // int32 total_count = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          total_count_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DataLinkResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:datalink.DataLinkResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .datalink.DataLinkMessage messages = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_messages_size()); i < n; i++) {
    const auto& repfield = this->_internal_messages(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  // int32 total_count = 2;
  if (this->_internal_total_count() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_total_count(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:datalink.DataLinkResponse)
  return target;
}

size_t DataLinkResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:datalink.DataLinkResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .datalink.DataLinkMessage messages = 1;
  total_size += 1UL * this->_internal_messages_size();
  for (const auto& msg : this->messages_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // int32 total_count = 2;
  if (this->_internal_total_count() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_total_count());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DataLinkResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    DataLinkResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DataLinkResponse::GetClassData() const { return &_class_data_; }

void DataLinkResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<DataLinkResponse *>(to)->MergeFrom(
      static_cast<const DataLinkResponse &>(from));
}


void DataLinkResponse::MergeFrom(const DataLinkResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:datalink.DataLinkResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  messages_.MergeFrom(from.messages_);
  if (from._internal_total_count() != 0) {
    _internal_set_total_count(from._internal_total_count());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DataLinkResponse::CopyFrom(const DataLinkResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:datalink.DataLinkResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DataLinkResponse::IsInitialized() const {
  return true;
}

void DataLinkResponse::InternalSwap(DataLinkResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  messages_.InternalSwap(&other->messages_);
  swap(total_count_, other->total_count_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DataLinkResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_datalink_2eproto_getter, &descriptor_table_datalink_2eproto_once,
      file_level_metadata_datalink_2eproto[2]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace datalink
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::datalink::DataLinkMessage*
Arena::CreateMaybeMessage< ::datalink::DataLinkMessage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::datalink::DataLinkMessage >(arena);
}
template<> PROTOBUF_NOINLINE ::datalink::DataLinkRequest*
Arena::CreateMaybeMessage< ::datalink::DataLinkRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::datalink::DataLinkRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::datalink::DataLinkResponse*
Arena::CreateMaybeMessage< ::datalink::DataLinkResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::datalink::DataLinkResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
