// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: iff.proto
// Protobuf C++ Version: 6.31.1

#include "iff.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace iff {

inline constexpr IFFRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        lat_{0},
        lon_{0},
        radius_km_{0} {}

template <typename>
PROTOBUF_CONSTEXPR IFFRequest::IFFRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(IFFRequest_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct IFFRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR IFFRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~IFFRequestDefaultTypeInternal() {}
  union {
    IFFRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 IFFRequestDefaultTypeInternal _IFFRequest_default_instance_;

inline constexpr IFFData::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        status_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        callsign_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        lat_{0},
        lon_{0} {}

template <typename>
PROTOBUF_CONSTEXPR IFFData::IFFData(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(IFFData_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct IFFDataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR IFFDataDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~IFFDataDefaultTypeInternal() {}
  union {
    IFFData _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 IFFDataDefaultTypeInternal _IFFData_default_instance_;

inline constexpr IFFStreamResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        data_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR IFFStreamResponse::IFFStreamResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(IFFStreamResponse_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct IFFStreamResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR IFFStreamResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~IFFStreamResponseDefaultTypeInternal() {}
  union {
    IFFStreamResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 IFFStreamResponseDefaultTypeInternal _IFFStreamResponse_default_instance_;
}  // namespace iff
static constexpr const ::_pb::EnumDescriptor *PROTOBUF_NONNULL *PROTOBUF_NULLABLE
    file_level_enum_descriptors_iff_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor *PROTOBUF_NONNULL *PROTOBUF_NULLABLE
    file_level_service_descriptors_iff_2eproto = nullptr;
const ::uint32_t
    TableStruct_iff_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::iff::IFFData, _impl_._has_bits_),
        8, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::iff::IFFData, _impl_.status_),
        PROTOBUF_FIELD_OFFSET(::iff::IFFData, _impl_.lat_),
        PROTOBUF_FIELD_OFFSET(::iff::IFFData, _impl_.lon_),
        PROTOBUF_FIELD_OFFSET(::iff::IFFData, _impl_.callsign_),
        PROTOBUF_FIELD_OFFSET(::iff::IFFData, _impl_.id_),
        0,
        3,
        4,
        1,
        2,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::iff::IFFRequest, _impl_._has_bits_),
        6, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::iff::IFFRequest, _impl_.lat_),
        PROTOBUF_FIELD_OFFSET(::iff::IFFRequest, _impl_.lon_),
        PROTOBUF_FIELD_OFFSET(::iff::IFFRequest, _impl_.radius_km_),
        0,
        1,
        2,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::iff::IFFStreamResponse, _impl_._has_bits_),
        4, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::iff::IFFStreamResponse, _impl_.data_),
        0,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, sizeof(::iff::IFFData)},
        {13, sizeof(::iff::IFFRequest)},
        {22, sizeof(::iff::IFFStreamResponse)},
};
static const ::_pb::Message* PROTOBUF_NONNULL const file_default_instances[] = {
    &::iff::_IFFData_default_instance_._instance,
    &::iff::_IFFRequest_default_instance_._instance,
    &::iff::_IFFStreamResponse_default_instance_._instance,
};
const char descriptor_table_protodef_iff_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\tiff.proto\022\003iff\"Q\n\007IFFData\022\016\n\006status\030\001 "
    "\001(\t\022\013\n\003lat\030\002 \001(\001\022\013\n\003lon\030\003 \001(\001\022\020\n\010callsig"
    "n\030\004 \001(\t\022\n\n\002id\030\005 \001(\t\"9\n\nIFFRequest\022\013\n\003lat"
    "\030\001 \001(\001\022\013\n\003lon\030\002 \001(\001\022\021\n\tradius_km\030\003 \001(\001\"/"
    "\n\021IFFStreamResponse\022\032\n\004data\030\001 \001(\0132\014.iff."
    "IFFData2H\n\nIFFService\022:\n\rStreamIFFData\022\017"
    ".iff.IFFRequest\032\026.iff.IFFStreamResponse0"
    "\001b\006proto3"
};
static ::absl::once_flag descriptor_table_iff_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_iff_2eproto = {
    false,
    false,
    289,
    descriptor_table_protodef_iff_2eproto,
    "iff.proto",
    &descriptor_table_iff_2eproto_once,
    nullptr,
    0,
    3,
    schemas,
    file_default_instances,
    TableStruct_iff_2eproto::offsets,
    file_level_enum_descriptors_iff_2eproto,
    file_level_service_descriptors_iff_2eproto,
};
namespace iff {
// ===================================================================

class IFFData::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<IFFData>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(IFFData, _impl_._has_bits_);
};

IFFData::IFFData(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, IFFData_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:iff.IFFData)
}
PROTOBUF_NDEBUG_INLINE IFFData::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::iff::IFFData& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        status_(arena, from.status_),
        callsign_(arena, from.callsign_),
        id_(arena, from.id_) {}

IFFData::IFFData(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const IFFData& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, IFFData_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  IFFData* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, lat_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, lat_),
           offsetof(Impl_, lon_) -
               offsetof(Impl_, lat_) +
               sizeof(Impl_::lon_));

  // @@protoc_insertion_point(copy_constructor:iff.IFFData)
}
PROTOBUF_NDEBUG_INLINE IFFData::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        status_(arena),
        callsign_(arena),
        id_(arena) {}

inline void IFFData::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, lat_),
           0,
           offsetof(Impl_, lon_) -
               offsetof(Impl_, lat_) +
               sizeof(Impl_::lon_));
}
IFFData::~IFFData() {
  // @@protoc_insertion_point(destructor:iff.IFFData)
  SharedDtor(*this);
}
inline void IFFData::SharedDtor(MessageLite& self) {
  IFFData& this_ = static_cast<IFFData&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.status_.Destroy();
  this_._impl_.callsign_.Destroy();
  this_._impl_.id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL IFFData::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) IFFData(arena);
}
constexpr auto IFFData::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(IFFData),
                                            alignof(IFFData));
}
constexpr auto IFFData::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_IFFData_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &IFFData::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<IFFData>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &IFFData::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<IFFData>(), &IFFData::ByteSizeLong,
              &IFFData::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(IFFData, _impl_._cached_size_),
          false,
      },
      &IFFData::kDescriptorMethods,
      &descriptor_table_iff_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull IFFData_class_data_ =
        IFFData::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
IFFData::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&IFFData_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(IFFData_class_data_.tc_table);
  return IFFData_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 0, 36, 2>
IFFData::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(IFFData, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    IFFData_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::iff::IFFData>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string status = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(IFFData, _impl_.status_)}},
    // double lat = 2;
    {::_pbi::TcParser::FastF64S1,
     {17, 3, 0, PROTOBUF_FIELD_OFFSET(IFFData, _impl_.lat_)}},
    // double lon = 3;
    {::_pbi::TcParser::FastF64S1,
     {25, 4, 0, PROTOBUF_FIELD_OFFSET(IFFData, _impl_.lon_)}},
    // string callsign = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 1, 0, PROTOBUF_FIELD_OFFSET(IFFData, _impl_.callsign_)}},
    // string id = 5;
    {::_pbi::TcParser::FastUS1,
     {42, 2, 0, PROTOBUF_FIELD_OFFSET(IFFData, _impl_.id_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string status = 1;
    {PROTOBUF_FIELD_OFFSET(IFFData, _impl_.status_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // double lat = 2;
    {PROTOBUF_FIELD_OFFSET(IFFData, _impl_.lat_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // double lon = 3;
    {PROTOBUF_FIELD_OFFSET(IFFData, _impl_.lon_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // string callsign = 4;
    {PROTOBUF_FIELD_OFFSET(IFFData, _impl_.callsign_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string id = 5;
    {PROTOBUF_FIELD_OFFSET(IFFData, _impl_.id_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\13\6\0\0\10\2\0\0"
    "iff.IFFData"
    "status"
    "callsign"
    "id"
  }},
};
PROTOBUF_NOINLINE void IFFData::Clear() {
// @@protoc_insertion_point(message_clear_start:iff.IFFData)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _impl_.status_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _impl_.callsign_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      _impl_.id_.ClearNonDefaultToEmpty();
    }
  }
  if ((cached_has_bits & 0x00000018u) != 0) {
    ::memset(&_impl_.lat_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.lon_) -
        reinterpret_cast<char*>(&_impl_.lat_)) + sizeof(_impl_.lon_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL IFFData::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const IFFData& this_ = static_cast<const IFFData&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL IFFData::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const IFFData& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:iff.IFFData)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string status = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._internal_status().empty()) {
      const ::std::string& _s = this_._internal_status();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "iff.IFFData.status");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // double lat = 2;
  if ((this_._impl_._has_bits_[0] & 0x00000008u) != 0) {
    if (::absl::bit_cast<::uint64_t>(this_._internal_lat()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteDoubleToArray(
          2, this_._internal_lat(), target);
    }
  }

  // double lon = 3;
  if ((this_._impl_._has_bits_[0] & 0x00000010u) != 0) {
    if (::absl::bit_cast<::uint64_t>(this_._internal_lon()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteDoubleToArray(
          3, this_._internal_lon(), target);
    }
  }

  // string callsign = 4;
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (!this_._internal_callsign().empty()) {
      const ::std::string& _s = this_._internal_callsign();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "iff.IFFData.callsign");
      target = stream->WriteStringMaybeAliased(4, _s, target);
    }
  }

  // string id = 5;
  if ((this_._impl_._has_bits_[0] & 0x00000004u) != 0) {
    if (!this_._internal_id().empty()) {
      const ::std::string& _s = this_._internal_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "iff.IFFData.id");
      target = stream->WriteStringMaybeAliased(5, _s, target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:iff.IFFData)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t IFFData::ByteSizeLong(const MessageLite& base) {
  const IFFData& this_ = static_cast<const IFFData&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t IFFData::ByteSizeLong() const {
  const IFFData& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:iff.IFFData)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000001fu) != 0) {
    // string status = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_status().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_status());
      }
    }
    // string callsign = 4;
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (!this_._internal_callsign().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_callsign());
      }
    }
    // string id = 5;
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (!this_._internal_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_id());
      }
    }
    // double lat = 2;
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (::absl::bit_cast<::uint64_t>(this_._internal_lat()) != 0) {
        total_size += 9;
      }
    }
    // double lon = 3;
    if ((cached_has_bits & 0x00000010u) != 0) {
      if (::absl::bit_cast<::uint64_t>(this_._internal_lon()) != 0) {
        total_size += 9;
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void IFFData::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<IFFData*>(&to_msg);
  auto& from = static_cast<const IFFData&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:iff.IFFData)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000001fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!from._internal_status().empty()) {
        _this->_internal_set_status(from._internal_status());
      } else {
        if (_this->_impl_.status_.IsDefault()) {
          _this->_internal_set_status("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (!from._internal_callsign().empty()) {
        _this->_internal_set_callsign(from._internal_callsign());
      } else {
        if (_this->_impl_.callsign_.IsDefault()) {
          _this->_internal_set_callsign("");
        }
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (!from._internal_id().empty()) {
        _this->_internal_set_id(from._internal_id());
      } else {
        if (_this->_impl_.id_.IsDefault()) {
          _this->_internal_set_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (::absl::bit_cast<::uint64_t>(from._internal_lat()) != 0) {
        _this->_impl_.lat_ = from._impl_.lat_;
      }
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      if (::absl::bit_cast<::uint64_t>(from._internal_lon()) != 0) {
        _this->_impl_.lon_ = from._impl_.lon_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void IFFData::CopyFrom(const IFFData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:iff.IFFData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void IFFData::InternalSwap(IFFData* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.status_, &other->_impl_.status_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.callsign_, &other->_impl_.callsign_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.id_, &other->_impl_.id_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(IFFData, _impl_.lon_)
      + sizeof(IFFData::_impl_.lon_)
      - PROTOBUF_FIELD_OFFSET(IFFData, _impl_.lat_)>(
          reinterpret_cast<char*>(&_impl_.lat_),
          reinterpret_cast<char*>(&other->_impl_.lat_));
}

::google::protobuf::Metadata IFFData::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class IFFRequest::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<IFFRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(IFFRequest, _impl_._has_bits_);
};

IFFRequest::IFFRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, IFFRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:iff.IFFRequest)
}
IFFRequest::IFFRequest(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const IFFRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, IFFRequest_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE IFFRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void IFFRequest::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, lat_),
           0,
           offsetof(Impl_, radius_km_) -
               offsetof(Impl_, lat_) +
               sizeof(Impl_::radius_km_));
}
IFFRequest::~IFFRequest() {
  // @@protoc_insertion_point(destructor:iff.IFFRequest)
  SharedDtor(*this);
}
inline void IFFRequest::SharedDtor(MessageLite& self) {
  IFFRequest& this_ = static_cast<IFFRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL IFFRequest::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) IFFRequest(arena);
}
constexpr auto IFFRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(IFFRequest),
                                            alignof(IFFRequest));
}
constexpr auto IFFRequest::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_IFFRequest_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &IFFRequest::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<IFFRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &IFFRequest::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<IFFRequest>(), &IFFRequest::ByteSizeLong,
              &IFFRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(IFFRequest, _impl_._cached_size_),
          false,
      },
      &IFFRequest::kDescriptorMethods,
      &descriptor_table_iff_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull IFFRequest_class_data_ =
        IFFRequest::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
IFFRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&IFFRequest_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(IFFRequest_class_data_.tc_table);
  return IFFRequest_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2>
IFFRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(IFFRequest, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    IFFRequest_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::iff::IFFRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // double lat = 1;
    {::_pbi::TcParser::FastF64S1,
     {9, 0, 0, PROTOBUF_FIELD_OFFSET(IFFRequest, _impl_.lat_)}},
    // double lon = 2;
    {::_pbi::TcParser::FastF64S1,
     {17, 1, 0, PROTOBUF_FIELD_OFFSET(IFFRequest, _impl_.lon_)}},
    // double radius_km = 3;
    {::_pbi::TcParser::FastF64S1,
     {25, 2, 0, PROTOBUF_FIELD_OFFSET(IFFRequest, _impl_.radius_km_)}},
  }}, {{
    65535, 65535
  }}, {{
    // double lat = 1;
    {PROTOBUF_FIELD_OFFSET(IFFRequest, _impl_.lat_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // double lon = 2;
    {PROTOBUF_FIELD_OFFSET(IFFRequest, _impl_.lon_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // double radius_km = 3;
    {PROTOBUF_FIELD_OFFSET(IFFRequest, _impl_.radius_km_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void IFFRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:iff.IFFRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    ::memset(&_impl_.lat_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.radius_km_) -
        reinterpret_cast<char*>(&_impl_.lat_)) + sizeof(_impl_.radius_km_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL IFFRequest::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const IFFRequest& this_ = static_cast<const IFFRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL IFFRequest::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const IFFRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:iff.IFFRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // double lat = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (::absl::bit_cast<::uint64_t>(this_._internal_lat()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteDoubleToArray(
          1, this_._internal_lat(), target);
    }
  }

  // double lon = 2;
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (::absl::bit_cast<::uint64_t>(this_._internal_lon()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteDoubleToArray(
          2, this_._internal_lon(), target);
    }
  }

  // double radius_km = 3;
  if ((this_._impl_._has_bits_[0] & 0x00000004u) != 0) {
    if (::absl::bit_cast<::uint64_t>(this_._internal_radius_km()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteDoubleToArray(
          3, this_._internal_radius_km(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:iff.IFFRequest)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t IFFRequest::ByteSizeLong(const MessageLite& base) {
  const IFFRequest& this_ = static_cast<const IFFRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t IFFRequest::ByteSizeLong() const {
  const IFFRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:iff.IFFRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    // double lat = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (::absl::bit_cast<::uint64_t>(this_._internal_lat()) != 0) {
        total_size += 9;
      }
    }
    // double lon = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (::absl::bit_cast<::uint64_t>(this_._internal_lon()) != 0) {
        total_size += 9;
      }
    }
    // double radius_km = 3;
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (::absl::bit_cast<::uint64_t>(this_._internal_radius_km()) != 0) {
        total_size += 9;
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void IFFRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<IFFRequest*>(&to_msg);
  auto& from = static_cast<const IFFRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:iff.IFFRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (::absl::bit_cast<::uint64_t>(from._internal_lat()) != 0) {
        _this->_impl_.lat_ = from._impl_.lat_;
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (::absl::bit_cast<::uint64_t>(from._internal_lon()) != 0) {
        _this->_impl_.lon_ = from._impl_.lon_;
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (::absl::bit_cast<::uint64_t>(from._internal_radius_km()) != 0) {
        _this->_impl_.radius_km_ = from._impl_.radius_km_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void IFFRequest::CopyFrom(const IFFRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:iff.IFFRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void IFFRequest::InternalSwap(IFFRequest* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(IFFRequest, _impl_.radius_km_)
      + sizeof(IFFRequest::_impl_.radius_km_)
      - PROTOBUF_FIELD_OFFSET(IFFRequest, _impl_.lat_)>(
          reinterpret_cast<char*>(&_impl_.lat_),
          reinterpret_cast<char*>(&other->_impl_.lat_));
}

::google::protobuf::Metadata IFFRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class IFFStreamResponse::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<IFFStreamResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(IFFStreamResponse, _impl_._has_bits_);
};

IFFStreamResponse::IFFStreamResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, IFFStreamResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:iff.IFFStreamResponse)
}
PROTOBUF_NDEBUG_INLINE IFFStreamResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::iff::IFFStreamResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

IFFStreamResponse::IFFStreamResponse(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const IFFStreamResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, IFFStreamResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  IFFStreamResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.data_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.data_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:iff.IFFStreamResponse)
}
PROTOBUF_NDEBUG_INLINE IFFStreamResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void IFFStreamResponse::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.data_ = {};
}
IFFStreamResponse::~IFFStreamResponse() {
  // @@protoc_insertion_point(destructor:iff.IFFStreamResponse)
  SharedDtor(*this);
}
inline void IFFStreamResponse::SharedDtor(MessageLite& self) {
  IFFStreamResponse& this_ = static_cast<IFFStreamResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.data_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL IFFStreamResponse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) IFFStreamResponse(arena);
}
constexpr auto IFFStreamResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(IFFStreamResponse),
                                            alignof(IFFStreamResponse));
}
constexpr auto IFFStreamResponse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_IFFStreamResponse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &IFFStreamResponse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<IFFStreamResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &IFFStreamResponse::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<IFFStreamResponse>(), &IFFStreamResponse::ByteSizeLong,
              &IFFStreamResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(IFFStreamResponse, _impl_._cached_size_),
          false,
      },
      &IFFStreamResponse::kDescriptorMethods,
      &descriptor_table_iff_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull IFFStreamResponse_class_data_ =
        IFFStreamResponse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
IFFStreamResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&IFFStreamResponse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(IFFStreamResponse_class_data_.tc_table);
  return IFFStreamResponse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2>
IFFStreamResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(IFFStreamResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    IFFStreamResponse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::iff::IFFStreamResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .iff.IFFData data = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(IFFStreamResponse, _impl_.data_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .iff.IFFData data = 1;
    {PROTOBUF_FIELD_OFFSET(IFFStreamResponse, _impl_.data_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::iff::IFFData>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void IFFStreamResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:iff.IFFStreamResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    ABSL_DCHECK(_impl_.data_ != nullptr);
    _impl_.data_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL IFFStreamResponse::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const IFFStreamResponse& this_ = static_cast<const IFFStreamResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL IFFStreamResponse::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const IFFStreamResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:iff.IFFStreamResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .iff.IFFData data = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.data_, this_._impl_.data_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:iff.IFFStreamResponse)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t IFFStreamResponse::ByteSizeLong(const MessageLite& base) {
  const IFFStreamResponse& this_ = static_cast<const IFFStreamResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t IFFStreamResponse::ByteSizeLong() const {
  const IFFStreamResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:iff.IFFStreamResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

   {
    // .iff.IFFData data = 1;
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.data_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void IFFStreamResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<IFFStreamResponse*>(&to_msg);
  auto& from = static_cast<const IFFStreamResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:iff.IFFStreamResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    ABSL_DCHECK(from._impl_.data_ != nullptr);
    if (_this->_impl_.data_ == nullptr) {
      _this->_impl_.data_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.data_);
    } else {
      _this->_impl_.data_->MergeFrom(*from._impl_.data_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void IFFStreamResponse::CopyFrom(const IFFStreamResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:iff.IFFStreamResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void IFFStreamResponse::InternalSwap(IFFStreamResponse* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.data_, other->_impl_.data_);
}

::google::protobuf::Metadata IFFStreamResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace iff
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ [[maybe_unused]] =
        (::_pbi::AddDescriptors(&descriptor_table_iff_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
